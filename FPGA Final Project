library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;


entity farzamsh is

GENERIC (fclk: INTEGER := 50_000_000);								------FEREKANS-------
PORT (clk,reset,rst: IN BIT;									--reset-->clock , rst-->FSM--
      keypad: INOUT std_logic_vector(3 downto 0);						-------vorodi---------
		BUZZER: OUT BIT :='0';								-------ZANG ALARM-----
		chooser : INOUT BIT:='0';							--chooser 7 segment --
		alarmdisplay : INOUT BIT:='0';							--- 1=> 7seg in use alarm--
		alarm_state : INOUT BIT:='1';							-----state alarm------
		ssd1,ssd2,ssd3,ssd4,ssd5,ssd6: OUT BIT_VECTOR (0 TO 6));			----7-SEGMENT---------
end entity;
architecture Behavioral of farzamsh is 										

-----ws : wait set clock | s  : set clock | 
----wsa : wait set alarm | sa : set alarm |
type state is ( base,w_menu1,menu1,ws1,ws2,ws3,ws4,ws5,ws6,
						s1,s2,s3,s4,s5,s6,w_menu2,menu2,w_cancel,
							wsa1,wsa2,wsa3,wsa4,wsa5,wsa6,sa1,
								sa2,sa3,sa4,sa5,sa6,w_setA ,setA);
	signal pr_state , nx_state : state;
------------------------------------------clock-----------------------------------------------
BEGIN

PROCESS (clk,rst)									
	BEGIN													
		IF (rst = '1') THEN							
			pr_state <= base;						
		ELSIF (clk'EVENT AND clk = '1') THEN	
			pr_state <= nx_state;					
		END IF;											
	END PROCESS;	
	
	


	PROCESS (clk,reset,pr_state, keypad)
		VARIABLE counter0_clk : INTEGER RANGE 0 TO fclk := 0;
		VARIABLE counter1_h : INTEGER RANGE 0 TO 2 := 0;
		VARIABLE counter2_h : INTEGER RANGE 0 TO 4 := 0;
		VARIABLE counter3_m : INTEGER RANGE 0 TO 6 := 0;
		VARIABLE counter4_m : INTEGER RANGE 0 TO 10 := 0;
		VARIABLE counter5_s : INTEGER RANGE 0 TO 6 := 0;
		VARIABLE counter6_s : INTEGER RANGE 0 TO 10 := 0;
		VARIABLE alarm_dh   : INTEGER RANGE 0 TO 2 := 1;
		VARIABLE alarm_yh   : INTEGER RANGE 0 TO 4 := 2;
		VARIABLE alarm_dm   : INTEGER RANGE 0 TO 6 := 0;
		VARIABLE alarm_ym   : INTEGER RANGE 0 TO 10 := 0;
		VARIABLE alarm_ds   : INTEGER RANGE 0 TO 6 := 0;
		VARIABLE alarm_ys   : INTEGER RANGE 0 TO 10 := 0;
		VARIABLE keypadtemp : INTEGER;
		VARIABLE dh   : INTEGER RANGE 0 TO 2 := 0;
		VARIABLE yh   : INTEGER RANGE 0 TO 4 :=0;
		VARIABLE dm   : INTEGER RANGE 0 TO 6 := 0;
		VARIABLE ym   : INTEGER RANGE 0 TO 10 := 0;
		VARIABLE ds   : INTEGER RANGE 0 TO 6 := 0;
		VARIABLE ys   : INTEGER RANGE 0 TO 10 := 0;
		---set kardan saat----
	BEGIN
------------------------------------------------------------------------------	
	if (reset = '1') THEN
	
		counter0_clk:=0;
		counter1_h:=0;
		counter2_h:=0;
		counter3_m:=0;
		counter4_m:=0;
		counter5_s:=0;
		counter6_s:=0;
		
	ELSIF (clk'EVENT AND clk = '1') THEN
		counter0_clk := counter0_clk + 1;
		IF (counter0_clk = fclk) THEN
			counter6_s := counter6_s + 1;
			IF (counter6_s = 10) THEN
				counter6_s := 0;
				counter5_s := counter5_s + 1;
				IF (counter5_s = 6) THEN
				counter5_s:= 0;
				counter4_m:=counter4_m + 1 ;
				  IF(counter4_m = 10) THEN
				     counter4_m:=0;
				     counter3_m:=counter3_m + 1;
				       IF(counter3_m = 6) THEN
				          counter3_m:=0;
 						   counter2_h:=counter2_h + 1;
							  IF(counter2_h =10) THEN
							    counter2_h:=0;
								 counter1_h:= counter1_h + 1;
								   IF(counter1_h = 2 AND counter2_h = 4) THEN
									   counter2_h:=0;
								      counter1_h:=0;
										
					         END IF;					
				         END IF;
				     END IF;
				END IF;
			END IF;
		END IF;
	END IF;
END IF;

	--------------------------------------ALARM CHECK ------------------------------
		IF( counter1_h = alarm_dh AND counter2_h = alarm_yh AND counter3_m = alarm_dm 
     AND counter4_m = alarm_ym AND counter5_s = alarm_ds AND counter6_s = alarm_ys
	  AND alarm_state='1')
 THEN BUZZER <='1';
 END IF;
 
 if(chooser='1') then 
 chooser<='0';
 counter1_h:=dh;
 counter2_h:=yh;
 counter3_m:=dm;
 counter4_m:=ym;
 counter5_s:=ds;
 counter6_s:=ys;
 end if;
 if(alarmdisplay='0')then
   ---------------------------------------------------------------------------------	
	CASE counter1_h IS
		WHEN 0 => ssd1 <= "0000001";			
		WHEN 1 => ssd1 <= "1001111";			
		WHEN 2 => ssd1 <= "0010010";						
		WHEN OTHERS => ssd1 <= "0110000";	
	END CASE;
------------------------------------------------------------------------------------	
	CASE counter2_h IS
		WHEN 0 => ssd2 <= "0000001";			
		WHEN 1 => ssd2 <= "1001111";			
		WHEN 2 => ssd2 <= "0010010";			
		WHEN 3 => ssd2 <= "0000110";			
		WHEN 4 => ssd2 <= "1001100";						
		WHEN OTHERS => ssd2 <= "0110000";	
	END CASE;
------------------------------------------------------------------------------------
CASE counter3_m IS
		WHEN 0 => ssd3 <= "0000001";			
		WHEN 1 => ssd3 <= "1001111";			
		WHEN 2 => ssd3 <= "0010010";			
		WHEN 3 => ssd3 <= "0000110";			
		WHEN 4 => ssd3 <= "1001100";			
		WHEN 5 => ssd3 <= "0100100";						
		WHEN OTHERS => ssd3 <= "0110000";	
	END CASE;
-------------------------------------------------------------------------------------
CASE counter4_m IS
		WHEN 0 => ssd4 <= "0000001";			
		WHEN 1 => ssd4 <= "1001111";			
		WHEN 2 => ssd4 <= "0010010";			
		WHEN 3 => ssd4 <= "0000110";			
		WHEN 4 => ssd4 <= "1001100";			
		WHEN 5 => ssd4 <= "0100100";			
		WHEN 6 => ssd4 <= "0100000";			
		WHEN 7 => ssd4 <= "0001111";			
		WHEN 8 => ssd4 <= "0000000";			
		WHEN 9 => ssd4 <= "0000100";			
		WHEN OTHERS => ssd4 <= "0110000";	
	END CASE;
-------------------------------------------------------------------------------------
CASE counter5_s IS
		WHEN 0 => ssd5 <= "0000001";			
		WHEN 1 => ssd5 <= "1001111";			
		WHEN 2 => ssd5 <= "0010010";			
		WHEN 3 => ssd5 <= "0000110";			
		WHEN 4 => ssd5 <= "1001100";			
		WHEN 5 => ssd5 <= "0100100";						
		WHEN OTHERS => ssd5 <= "0110000";	
	END CASE;
-------------------------------------------------------------------------------------
CASE counter6_s IS
		WHEN 0 => ssd6 <= "0000001";			
		WHEN 1 => ssd6 <= "1001111";			
		WHEN 2 => ssd6 <= "0010010";			
		WHEN 3 => ssd6 <= "0000110";			
		WHEN 4 => ssd6 <= "1001100";			
		WHEN 5 => ssd6 <= "0100100";			
		WHEN 6 => ssd6 <= "0100000";			
		WHEN 7 => ssd6 <= "0001111";			
		WHEN 8 => ssd6 <= "0000000";			
		WHEN 9 => ssd6 <= "0000100";			
		WHEN  OTHERS => ssd6 <= "0110000";	
	END CASE;
	end if;
	
	
	-----------------------7SEG VA CLOCK VA ALARM TAMOM SHOD--------------------------
	
	----------------------------------------------------------------------------------
	----------------------------------------------------------------------------------
	----------------------------------------------------------------------------------
	----------------------------------------------------------------------------------
	----------------------------------------------------------------------------------
	----------------------------------------------------------------------------------
	
	
CASE pr_state IS

WHEN base => 
chooser<='0';
	if( keypad="1010") then nx_state <=w_menu1;
	else nx_state <=base;
	end if;
	
-------------------------------------------------------------
WHEN w_menu1 =>															
					IF (keypad = "1111") THEN									
						nx_state <= menu1; 												
					ELSE																	
						nx_state <= w_menu1;											
					END IF;	
-------------------------------------------------------------					
WHEN menu1 =>																
					IF (keypad = "1010") THEN									
						nx_state <=w_menu2; 												
					ELSIF (keypad <= "1001") THEN 																	
						nx_state <= wS1;
						CASE keypad IS
		WHEN "0000" => keypadtemp := 0;			
		WHEN "0001" => keypadtemp := 1;			
		WHEN "0010" => keypadtemp := 2;			
		WHEN "0011" => keypadtemp := 3;			
		WHEN "0100" => keypadtemp := 4;			
		WHEN "0101" => keypadtemp := 5;			
		WHEN "0110" => keypadtemp := 6;			
		WHEN "0111" => keypadtemp := 7;			
		WHEN "1000" => keypadtemp := 8;			
		WHEN "1001" => keypadtemp := 9;			
		WHEN OTHERS => keypadtemp := 10;	
						END CASE;
						dh:=keypadtemp;
					ELSE 
						nx_state <= menu1;
					END IF;		
-------------------------------------------------------------
WHEN ws1 =>		
chooser <='1';	
ssd1<="1111111";
ssd2<="1111111";
ssd3<="1111111";
ssd4<="1111111";
ssd5<="1111111";
ssd6<="1111111";
								
					IF (keypad = "1111") THEN									
						nx_state <= s1;
						
						CASE keypadtemp IS
		WHEN 0 => ssd1 <= "0000001";			
		WHEN 1 => ssd1 <= "1001111";			
		WHEN 2 => ssd1 <= "0010010";			
		WHEN 3 => ssd1 <= "0000110";			
		WHEN 4 => ssd1 <= "1001100";			
		WHEN 5 => ssd1 <= "0100100";			
		WHEN 6 => ssd1 <= "0100000";			
		WHEN 7 => ssd1 <= "0001111";			
		WHEN 8 => ssd1 <= "0000000";			
		WHEN 9 => ssd1 <= "0000100";			
		WHEN OTHERS => ssd1 <= "1111111";	
						END CASE;
												
					ELSE																	
						nx_state <= ws1;											
					END IF;
-------------------------------------------------------------					
WHEN s1 =>	
chooser <='1';																
					IF (keypad <= "1001") THEN									
						nx_state <=ws2;
							CASE keypad IS
		WHEN "0000" => keypadtemp := 0;			
		WHEN "0001" => keypadtemp := 1;			
		WHEN "0010" => keypadtemp := 2;			
		WHEN "0011" => keypadtemp := 3;			
		WHEN "0100" => keypadtemp := 4;			
		WHEN "0101" => keypadtemp := 5;			
		WHEN "0110" => keypadtemp := 6;			
		WHEN "0111" => keypadtemp := 7;			
		WHEN "1000" => keypadtemp := 8;			
		WHEN "1001" => keypadtemp := 9;			
		WHEN OTHERS => keypadtemp := 10;	
						END CASE;
						yh:=keypadtemp;
					ELSE 
						nx_state <= s1;
					END IF;
-------------------------------------------------------------					
WHEN ws2 =>	
chooser <='1';		
								
					IF (keypad = "1111") THEN									
						nx_state <= s2; 	
						CASE keypadtemp IS
		WHEN 0 => ssd2 <= "0000001";			
		WHEN 1 => ssd2 <= "1001111";			
		WHEN 2 => ssd2 <= "0010010";			
		WHEN 3 => ssd2 <= "0000110";			
		WHEN 4 => ssd2 <= "1001100";			
		WHEN 5 => ssd2 <= "0100100";			
		WHEN 6 => ssd2 <= "0100000";			
		WHEN 7 => ssd2 <= "0001111";			
		WHEN 8 => ssd2 <= "0000000";			
		WHEN 9 => ssd2 <= "0000100";			
		WHEN OTHERS => ssd2 <= "1111111";	
						END CASE;
												
					ELSE																	
						nx_state <= ws2;											
					END IF;
-------------------------------------------------------------					
WHEN s2 =>	
chooser <='1';																
					IF (keypad <= "1001") THEN									
						nx_state <=ws3;
						CASE keypad IS
		WHEN "0000" => keypadtemp := 0;			
		WHEN "0001" => keypadtemp := 1;			
		WHEN "0010" => keypadtemp := 2;			
		WHEN "0011" => keypadtemp := 3;			
		WHEN "0100" => keypadtemp := 4;			
		WHEN "0101" => keypadtemp := 5;			
		WHEN "0110" => keypadtemp := 6;			
		WHEN "0111" => keypadtemp := 7;			
		WHEN "1000" => keypadtemp := 8;			
		WHEN "1001" => keypadtemp := 9;			
		WHEN OTHERS => keypadtemp := 10;	
						END CASE;
						dm:=keypadtemp;
					ELSE 
						nx_state <= s2;
					END IF;
-------------------------------------------------------------					
WHEN ws3 =>
chooser <='1';			
								
					IF (keypad = "1111") THEN									
						nx_state <= s3; 	
						CASE keypadtemp IS
		WHEN 0 => ssd3 <= "0000001";			
		WHEN 1 => ssd3 <= "1001111";			
		WHEN 2 => ssd3 <= "0010010";			
		WHEN 3 => ssd3 <= "0000110";			
		WHEN 4 => ssd3 <= "1001100";			
		WHEN 5 => ssd3 <= "0100100";			
		WHEN 6 => ssd3 <= "0100000";			
		WHEN 7 => ssd3 <= "0001111";			
		WHEN 8 => ssd3 <= "0000000";			
		WHEN 9 => ssd3 <= "0000100";			
		WHEN OTHERS => ssd3 <= "1111111";	
						END CASE;
												
					ELSE																	
						nx_state <= ws3;											
					END IF;
-------------------------------------------------------------					
WHEN s3 =>	
chooser <='1';																
					IF (keypad <= "1001") THEN									
						nx_state <=ws4;
						CASE keypad IS
		WHEN "0000" => keypadtemp := 0;			
		WHEN "0001" => keypadtemp := 1;			
		WHEN "0010" => keypadtemp := 2;			
		WHEN "0011" => keypadtemp := 3;			
		WHEN "0100" => keypadtemp := 4;			
		WHEN "0101" => keypadtemp := 5;			
		WHEN "0110" => keypadtemp := 6;			
		WHEN "0111" => keypadtemp := 7;			
		WHEN "1000" => keypadtemp := 8;			
		WHEN "1001" => keypadtemp := 9;			
		WHEN OTHERS => keypadtemp := 10;	
						END CASE;
						ym:=keypadtemp;
					ELSE 
						nx_state <= s3;
					END IF;
-------------------------------------------------------------					
WHEN ws4 =>	
chooser <='1';		
								
					IF (keypad = "1111") THEN									
						nx_state <= s4; 	
						CASE keypadtemp IS
		WHEN 0 => ssd4 <= "0000001";			
		WHEN 1 => ssd4 <= "1001111";			
		WHEN 2 => ssd4 <= "0010010";			
		WHEN 3 => ssd4 <= "0000110";			
		WHEN 4 => ssd4 <= "1001100";			
		WHEN 5 => ssd4 <= "0100100";			
		WHEN 6 => ssd4 <= "0100000";			
		WHEN 7 => ssd4 <= "0001111";			
		WHEN 8 => ssd4 <= "0000000";			
		WHEN 9 => ssd4 <= "0000100";			
		WHEN OTHERS => ssd4 <= "1111111";	
						END CASE;
												
					ELSE																	
						nx_state <= ws4;											
					END IF;
-------------------------------------------------------------					
WHEN s4 =>	
chooser <='1';																
					IF (keypad <= "1001") THEN									
						nx_state <=ws5;
						CASE keypad IS
		WHEN "0000" => keypadtemp := 0;			
		WHEN "0001" => keypadtemp := 1;			
		WHEN "0010" => keypadtemp := 2;			
		WHEN "0011" => keypadtemp := 3;			
		WHEN "0100" => keypadtemp := 4;			
		WHEN "0101" => keypadtemp := 5;			
		WHEN "0110" => keypadtemp := 6;			
		WHEN "0111" => keypadtemp := 7;			
		WHEN "1000" => keypadtemp := 8;			
		WHEN "1001" => keypadtemp := 9;			
		WHEN OTHERS => keypadtemp := 10;	
						END CASE;
						ds:=keypadtemp;
					ELSE 
						nx_state <= s4;
					END IF;
-------------------------------------------------------------					
WHEN ws5 =>		
chooser <='1';									
					IF (keypad = "1111") THEN									
						nx_state <= s5; 	
						CASE keypadtemp IS
		WHEN 0 => ssd5 <= "0000001";			
		WHEN 1 => ssd5 <= "1001111";			
		WHEN 2 => ssd5 <= "0010010";			
		WHEN 3 => ssd5 <= "0000110";			
		WHEN 4 => ssd5 <= "1001100";			
		WHEN 5 => ssd5 <= "0100100";			
		WHEN 6 => ssd5 <= "0100000";			
		WHEN 7 => ssd5 <= "0001111";			
		WHEN 8 => ssd5 <= "0000000";			
		WHEN 9 => ssd5 <= "0000100";			
		WHEN OTHERS => ssd5 <= "1111111";	
						END CASE;
												
					ELSE																	
						nx_state <= ws5;											
					END IF;					
-------------------------------------------------------------					
WHEN s5 =>
chooser <='1';																	
					IF (keypad <= "1001") THEN									
						nx_state <=ws6;
						CASE keypad IS
		WHEN "0000" => keypadtemp := 0;			
		WHEN "0001" => keypadtemp := 1;			
		WHEN "0010" => keypadtemp := 2;			
		WHEN "0011" => keypadtemp := 3;			
		WHEN "0100" => keypadtemp := 4;			
		WHEN "0101" => keypadtemp := 5;			
		WHEN "0110" => keypadtemp := 6;			
		WHEN "0111" => keypadtemp := 7;			
		WHEN "1000" => keypadtemp := 8;			
		WHEN "1001" => keypadtemp := 9;			
		WHEN OTHERS => keypadtemp := 10;	
						END CASE;
						ys:=keypadtemp;
					ELSE 
						nx_state <= s5;
					END IF;					
-------------------------------------------------------------					
WHEN ws6 =>	
chooser <='1';		
								
					IF (keypad = "1111") THEN									
						nx_state <= s6; 	
						CASE keypadtemp IS
		WHEN 0 => ssd6 <= "0000001";			
		WHEN 1 => ssd6 <= "1001111";			
		WHEN 2 => ssd6 <= "0010010";			
		WHEN 3 => ssd6 <= "0000110";			
		WHEN 4 => ssd6 <= "1001100";			
		WHEN 5 => ssd6 <= "0100100";			
		WHEN 6 => ssd6 <= "0100000";			
		WHEN 7 => ssd6 <= "0001111";			
		WHEN 8 => ssd6 <= "0000000";			
		WHEN 9 => ssd6 <= "0000100";			
		WHEN OTHERS => ssd6 <= "1111111";	
						END CASE;
												
					ELSE																	
						nx_state <= ws6;											
					END IF;				
-------------------------------------------------------------
WHEN s6 =>
chooser <='1';																	
					IF (keypad <= "1011") THEN									
						nx_state <=base;
						keypadtemp:=0;
						
						
					ELSE 
						nx_state <= s6;
					END IF;
					
-------------------------------------------------------------
WHEN w_menu2 =>																	
					IF (keypad = "1111") THEN									
						nx_state <=menu2;		
					ELSE 
						nx_state <= w_menu2;
					END IF;
					
-------------------------------------------------------------
WHEN menu2 =>																	
					IF (keypad = "1100") THEN									
						nx_state <=w_cancel;		
					ELSIF (keypad="1011")then 
						nx_state<=w_setA;
						else
						nx_state <= menu2;
					END IF;
-------------------------------------------------------------
WHEN w_cancel =>																	
					IF (keypad = "1111") THEN									
						nx_state <=base;
						alarm_state<='0';
					else
						nx_state <= w_cancel;
					END IF;
-------------------------------------------------------------
WHEN w_setA =>																	
					IF (keypad = "1111") THEN									
						nx_state <=setA;
					else
						nx_state <= w_setA;
					END IF;
-------------------------------------------------------------
WHEN setA =>
alarmdisplay<='1';
ssd1<="1111111";
ssd2<="1111111";
ssd3<="1111111";
ssd4<="1111111";
ssd5<="1111111";
ssd6<="1111111";																	
					IF (keypad <= "1001") THEN									
						nx_state <=wsa1;
						CASE keypad IS
		WHEN "0000" => keypadtemp := 0;			
		WHEN "0001" => keypadtemp := 1;			
		WHEN "0010" => keypadtemp := 2;			
		WHEN "0011" => keypadtemp := 3;			
		WHEN "0100" => keypadtemp := 4;			
		WHEN "0101" => keypadtemp := 5;			
		WHEN "0110" => keypadtemp := 6;			
		WHEN "0111" => keypadtemp := 7;			
		WHEN "1000" => keypadtemp := 8;			
		WHEN "1001" => keypadtemp := 9;			
		WHEN OTHERS => keypadtemp := 10;	
						END CASE;
						alarm_dh:=keypadtemp;
					else
						nx_state <= setA;
					END IF;										
-------------------------------------------------------------					
WHEN wsa1=>		
alarmdisplay<='1';									
					IF (keypad = "1111") THEN									
						nx_state <= sa1; 	
						CASE keypadtemp IS
		WHEN 0 => ssd1 <= "0000001";			
		WHEN 1 => ssd1 <= "1001111";			
		WHEN 2 => ssd1 <= "0010010";			
		WHEN 3 => ssd1 <= "0000110";			
		WHEN 4 => ssd1 <= "1001100";			
		WHEN 5 => ssd1 <= "0100100";			
		WHEN 6 => ssd1 <= "0100000";			
		WHEN 7 => ssd1 <= "0001111";			
		WHEN 8 => ssd1 <= "0000000";			
		WHEN 9 => ssd1 <= "0000100";			
		WHEN OTHERS => ssd1 <= "1111111";	
						END CASE;
												
					ELSE																	
						nx_state <= wsa1;											
					END IF;										
-------------------------------------------------------------
WHEN sa1 =>
alarmdisplay<='1';																	
					IF (keypad <= "1001") THEN									
						nx_state <=wsa2;
						CASE keypad IS
		WHEN "0000" => keypadtemp := 0;			
		WHEN "0001" => keypadtemp := 1;			
		WHEN "0010" => keypadtemp := 2;			
		WHEN "0011" => keypadtemp := 3;			
		WHEN "0100" => keypadtemp := 4;			
		WHEN "0101" => keypadtemp := 5;			
		WHEN "0110" => keypadtemp := 6;			
		WHEN "0111" => keypadtemp := 7;			
		WHEN "1000" => keypadtemp := 8;			
		WHEN "1001" => keypadtemp := 9;			
		WHEN OTHERS => keypadtemp := 10;	
						END CASE;
						alarm_yh:=keypadtemp;
					else
						nx_state <= sa1;
					END IF;
-------------------------------------------------------------					
WHEN wsa2=>		
alarmdisplay<='1';									
					IF (keypad = "1111") THEN									
						nx_state <= sa2; 	
						CASE keypadtemp IS
		WHEN 0 => ssd2 <= "0000001";			
		WHEN 1 => ssd2 <= "1001111";			
		WHEN 2 => ssd2 <= "0010010";			
		WHEN 3 => ssd2 <= "0000110";			
		WHEN 4 => ssd2 <= "1001100";			
		WHEN 5 => ssd2 <= "0100100";			
		WHEN 6 => ssd2 <= "0100000";			
		WHEN 7 => ssd2 <= "0001111";			
		WHEN 8 => ssd2 <= "0000000";			
		WHEN 9 => ssd2 <= "0000100";			
		WHEN OTHERS => ssd2 <= "1111111";	
						END CASE;
												
					ELSE																	
						nx_state <= wsa2;											
					END IF;											
-------------------------------------------------------------
WHEN sa2 =>
alarmdisplay<='1';																	
					IF (keypad <= "1001") THEN									
						nx_state <=wsa3;
						CASE keypad IS
		WHEN "0000" => keypadtemp := 0;			
		WHEN "0001" => keypadtemp := 1;			
		WHEN "0010" => keypadtemp := 2;			
		WHEN "0011" => keypadtemp := 3;			
		WHEN "0100" => keypadtemp := 4;			
		WHEN "0101" => keypadtemp := 5;			
		WHEN "0110" => keypadtemp := 6;			
		WHEN "0111" => keypadtemp := 7;			
		WHEN "1000" => keypadtemp := 8;			
		WHEN "1001" => keypadtemp := 9;			
		WHEN OTHERS => keypadtemp := 10;	
						END CASE;
						alarm_dm:=keypadtemp;
					else
						nx_state <= sa2;
					END IF;
-------------------------------------------------------------					
WHEN wsa3=>		
alarmdisplay<='1';									
					IF (keypad = "1111") THEN									
						nx_state <= sa3; 	
						CASE keypadtemp IS
		WHEN 0 => ssd3 <= "0000001";			
		WHEN 1 => ssd3 <= "1001111";			
		WHEN 2 => ssd3 <= "0010010";			
		WHEN 3 => ssd3 <= "0000110";			
		WHEN 4 => ssd3 <= "1001100";			
		WHEN 5 => ssd3 <= "0100100";			
		WHEN 6 => ssd3 <= "0100000";			
		WHEN 7 => ssd3 <= "0001111";			
		WHEN 8 => ssd3 <= "0000000";			
		WHEN 9 => ssd3 <= "0000100";			
		WHEN OTHERS => ssd3 <= "1111111";	
						END CASE;
												
					ELSE																	
						nx_state <= wsa3;											
					END IF;											

-------------------------------------------------------------
WHEN sa3 =>
alarmdisplay<='1';																	
					IF (keypad <= "1001") THEN									
						nx_state <=wsa4;
						CASE keypad IS
		WHEN "0000" => keypadtemp := 0;			
		WHEN "0001" => keypadtemp := 1;			
		WHEN "0010" => keypadtemp := 2;			
		WHEN "0011" => keypadtemp := 3;			
		WHEN "0100" => keypadtemp := 4;			
		WHEN "0101" => keypadtemp := 5;			
		WHEN "0110" => keypadtemp := 6;			
		WHEN "0111" => keypadtemp := 7;			
		WHEN "1000" => keypadtemp := 8;			
		WHEN "1001" => keypadtemp := 9;			
		WHEN OTHERS => keypadtemp := 10;	
						END CASE;
						alarm_ym:=keypadtemp;
					else
						nx_state <= sa3;
					END IF;
-------------------------------------------------------------					
WHEN wsa4=>		
alarmdisplay<='1';									
					IF (keypad = "1111") THEN									
						nx_state <= sa4; 	
						CASE keypadtemp IS
		WHEN 0 => ssd4 <= "0000001";			
		WHEN 1 => ssd4 <= "1001111";			
		WHEN 2 => ssd4 <= "0010010";			
		WHEN 3 => ssd4 <= "0000110";			
		WHEN 4 => ssd4 <= "1001100";			
		WHEN 5 => ssd4 <= "0100100";			
		WHEN 6 => ssd4 <= "0100000";			
		WHEN 7 => ssd4 <= "0001111";			
		WHEN 8 => ssd4 <= "0000000";			
		WHEN 9 => ssd4 <= "0000100";			
		WHEN OTHERS => ssd4 <= "1111111";	
						END CASE;
												
					ELSE																	
						nx_state <= wsa4;											
					END IF;											
-------------------------------------------------------------
WHEN sa4 =>
alarmdisplay<='1';																	
					IF (keypad <= "1001") THEN									
						nx_state <=wsa5;
						CASE keypad IS
		WHEN "0000" => keypadtemp := 0;			
		WHEN "0001" => keypadtemp := 1;			
		WHEN "0010" => keypadtemp := 2;			
		WHEN "0011" => keypadtemp := 3;			
		WHEN "0100" => keypadtemp := 4;			
		WHEN "0101" => keypadtemp := 5;			
		WHEN "0110" => keypadtemp := 7;			
		WHEN "1000" => keypadtemp := 8;			
		WHEN "1001" => keypadtemp := 9;			
		WHEN OTHERS => keypadtemp := 10;	
						END CASE;
						alarm_ds:=keypadtemp;
					else
						nx_state <= sa4;
					END IF;
-------------------------------------------------------------					
WHEN wsa5=>		
alarmdisplay<='1';									
					IF (keypad = "1111") THEN									
						nx_state <= sa5; 	
						CASE keypadtemp IS
		WHEN 0 => ssd5 <= "0000001";			
		WHEN 1 => ssd5 <= "1001111";			
		WHEN 2 => ssd5 <= "0010010";			
		WHEN 3 => ssd5 <= "0000110";			
		WHEN 4 => ssd5 <= "1001100";			
		WHEN 5 => ssd5 <= "0100100";			
		WHEN 6 => ssd5 <= "0100000";			
		WHEN 7 => ssd5 <= "0001111";			
		WHEN 8 => ssd5 <= "0000000";			
		WHEN 9 => ssd5 <= "0000100";			
		WHEN OTHERS => ssd5 <= "1111111";	
						END CASE;
												
					ELSE																	
						nx_state <= wsa5;											
					END IF;								
-------------------------------------------------------------
WHEN sa5 =>
alarmdisplay<='1';																	
					IF (keypad <= "1001") THEN									
						nx_state <=wsa6;
						CASE keypad IS
		WHEN "0000" => keypadtemp := 0;			
		WHEN "0001" => keypadtemp := 1;			
		WHEN "0010" => keypadtemp := 2;			
		WHEN "0011" => keypadtemp := 3;			
		WHEN "0100" => keypadtemp := 4;			
		WHEN "0101" => keypadtemp := 5;			
		WHEN "0110" => keypadtemp := 6;			
		WHEN "0111" => keypadtemp := 7;			
		WHEN "1000" => keypadtemp := 8;			
		WHEN "1001" => keypadtemp := 9;			
		WHEN OTHERS => keypadtemp := 10;	
						END CASE;
						alarm_ys:=keypadtemp;
					else
						nx_state <= sa5;
					END IF;
-------------------------------------------------------------					
WHEN wsa6=>		
alarmdisplay<='1';									
					IF (keypad = "1111") THEN									
						nx_state <= sa6; 	
						CASE keypadtemp IS
		WHEN 0 => ssd6 <= "0000001";			
		WHEN 1 => ssd6 <= "1001111";			
		WHEN 2 => ssd6 <= "0010010";			
		WHEN 3 => ssd6 <= "0000110";			
		WHEN 4 => ssd6 <= "1001100";			
		WHEN 5 => ssd6 <= "0100100";			
		WHEN 6 => ssd6 <= "0100000";			
		WHEN 7 => ssd6 <= "0001111";			
		WHEN 8 => ssd6 <= "0000000";			
		WHEN 9 => ssd6 <= "0000100";			
		WHEN OTHERS => ssd6 <= "1111111";	
						END CASE;
												
					ELSE																	
						nx_state <= wsa6;											
					END IF;		
-------------------------------------------------------------
WHEN sa6 =>
alarmdisplay<='0';																	
					IF (keypad = "1011") THEN									
						nx_state <=base;
					else
						nx_state <= sa6;
					END IF;




	END CASE;
	END PROCESS;
	END ARCHITECTURE;
